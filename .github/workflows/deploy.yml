name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t my-node-app .

      - name: Log in to Amazon ECR
        run: |
          echo "${{ secrets.AWS_ACCESS_KEY_ID }}" | docker login -u AWS --password-stdin 225989376232.dkr.ecr.us-east-1.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Tag Docker image
        run: |
          docker tag my-node-app:latest 225989376232.dkr.ecr.us-east-1.amazonaws.com/my-node-app:latest

      - name: Push Docker image to ECR
        run: |
          docker push 225989376232.dkr.ecr.us-east-1.amazonaws.com/my-node-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster nodespace --service DepService --force-new-deployment
